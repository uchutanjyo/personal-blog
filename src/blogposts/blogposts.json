{
  "tags": [

  ],
  "posts": [
    {
      "id": 1,
      "author": "Matt Engerer",
      "title": "Conditional Axios-Request/Response URL based on whether server running locally or remotely - React, Express.js, process.env.NODE_ENV",
      "preview": "Wow, that was a long post-title- which probably doesn't properly explain what I did, but it made sense in my head. It's been a long time since I wrote anything here",
      "date": "June 2, 2022",
      "image": "",
      "readingTimeMinutes": 9,
      "paragraphs": [["Wow, that was a long post-title- which probably doesn't properly explain what I did, but it made sense in my head. It's been a long time since I wrote anything here"], 

      
      ["I found it very difficult to find clear instructions on this (for people at my level, anyway..), so hopefully this helps someone. Please excuse any bad grammar / lack of capitalization/punctuation -I'm writing this fast so I can get back to my work!"],

      ["Basically, I have a React front end which talks to an Express/MySQL backend. Via axios requests/responses, I wanted to know how to conditionally connect React to either: "],

["-my locally running server (command 'heroku local') when writing code/debugging, so I could have full and easy access to the server's console (rather than pushing to heroku git every time I wanted to observe server changes)."],

["-the hosted Heroku server after pushing changes."],

["I already knew how to do this by hard-coding axios requests to either the server running on localhost OR the actual hosted app. Of course, hardcoding the changes for every single request is NOT practical at all. Without instruction, I set off down yet another rabbit hole, searching for the answer to this question."],

["Eventually, I found a recommendation to change the process.env.NODE_ENV to either development or production in order to conditionally change the url I wanted to send requests to. Like so:."],

["conditionalax-1.png"],


 ["And then, in an example axios request: "],
       ["conditionalax-2.png"],

 ["This would ensure that the request would be made to localhost if the node environment variable was set to 'development'. Anything else would make a request to my hosted server."],


 ["However, I struggled for a while to  figure out HOW to change NODE_ENV depending on my needs. Without going deep into it (because I'm unable to, basically..), it turns out that it can't be modified directly, and in fact, when running a React app in 'build' mode (for me, the command is 'npm run build') the NODE_ENV is automatically set to 'production'. When running in development mode ('npm start'), the NODE_ENV is 'development'. "],

 ["So, everything was actually already in place. The problem was, I was trying to test this while only connecting to my localhost express server (waiting for recent console.logs to not be logged in my server console - however, they were always logged, because I was always running the local version of my front-end app, no matter what I tried to do to change the NODE_ENV directly). I only figured it out when I pushed my React changes to github (which included a console log of process.env.NODE_ENV) and ran my hosted full-stack app (netlify and Heroku). It was there that I noticed NODE_ENV was automatically being set to 'production'. Everything made sense, then! "],

 ["I hope this helps out anyone who stumbles upon this who is stuck like I was - creating this developer-production environment with React and Express was actually quite a bit simpler than I'd originally thought."]
  
    ],

  
      "tags": []
    },
    {
      "id": 2,
      "author": "Matt Engerer",
      "title": "A Note to Self on Persistence - MySQL",
      "preview": "Just a quick note to self (and anyone else who struggles with setting up their dev environment in any capacity",
      "date": "May 6, 2022",
      "image": "",
      "readingTimeMinutes": 12,
      "paragraphs": [
        ["Just a quick note to self (and anyone else who struggles with setting up their dev environment in any capacity): when it comes to getting stuck, persistence really is what is required to move forward in most cases!"],

        ["I suddenly realized that changing my MySQL password would be necessary before deploying/hosting my first full-stack application, as the password is general-use for me - and also somewhat stupidly stored in the config file for my Express server. OK, maybe this isn't as important as I think it is, but I didn't have a good feeling about leaving it there."],
        
        
        ["Anyways, after going through several articles and trying several suggestions on how to accomplish this, I landed on this article: https://www.mysqltutorial.org/mysql-changing-password.aspx"],
        
        ["It took until the bottom solution for me to find the one that worked for me (i.e. my version of MySQL, Ubuntu etc.). Thank you to the authors!"],
        
        ["This is what worked, once logged into MySQL via the terminal:"],
        
        ["ALTER USER dbadmin@localhost IDENTIFIED BY 'littlewhale'"],
        
        ["So yes, this is basically a reminder to myself and all the other basically still-beginners out there: just keep pushing when something's not working - eventually, you will get it. Try not to get frustrated as it's a waste of energy. :)"],
        
        ["That's it! More coming soon."]
        
          
      ]
    },
    {
      "id": 4,
      "author": "Matt Engerer",
      "title": "Basic Text Markup/Styling & Conditional Rendering of Images from Local JSON File",
      "preview": "Proin at turpis a pede posuere nonummy. Integer non velit.",
      "date": "August 11, 2022",
      "image": "http://dummyimage.com/200x134.png/5fa2dd/ffffff",
      "readingTimeMinutes": 13,
      "paragraphs": [["I let this blog sit inactive for a couple months. While my reasons for this are unsatisfying (even for myself), they amount to 'too many other things going on', and 'rushing to move forwards after learning/implementing/building something new rather than slowing down and documenting the process'.  However, I've learned my lesson. From now on, I'll be taking my time to write out any novel solutions I come up with (or find/put together from Google searches, and turn them into 'Content' right here! :)"],

      ["Anyway, I might as well make today's post about the seemingly simple/trivial feature I was able to implement on this very blog just a few minutes ago. It actually took me a couple hours to work out. "],

      ["While I am eventually planning to create a server/database for this blog to store my posts, for the time being they are stored in a JSON file. I wanted to implement some basic styling for the mapped blogposts. Also, in my original Blogger blog, I had the occasional screenshot of code included amongst the text, and I wanted to include these images in each Blogpost page in the same places they appeared in the original blog.   "],
    
      ["The inline styling was straightforward enough and doesn't require a blog post:"],

      ["dsf"],
      ["However, just trying to get local images to render on the page was a whole other thing. Here's how I eventually got it to work:"],

      ["in Blogpost.js (component conditionally rendered based on which blog post chosen"],
      ["sdfdsf"],
      ["in the local JSON file"],
      ["asd"],
      ["**** will complete shortly."]


      ],
      "tags": []
    },
    {
      "id": 5,
      "author": "Matt Engerer",
      "title": "Successful Immediate-Updating of Cart Item Quantity in State, Rendering on Cart Page (React Router, Express)",
      "preview": " just managed to get something work which seems to be a very common issue among React beginners..",
      "date": "May 3, 2022",
      "image": "",
      "readingTimeMinutes": 15,
      "paragraphs": [
        ["I just managed to get something work which seems to be a very common issue among React beginners."],

        ["I had been trying to update the shopping cart qty immediately after adding an item to the cart/redirecting to cart page in my React Router/Express/MySQL fake e-commerce store project. After a couple hours of struggling, here is how I did it (brief explanation):"],

        ["DISCLAIMER: my code indentation is horrible - it’s something I plan to fix before any ‘final’ versions of any app I create are ‘released’."],


        ["-handleSubmit function which updates cartItems in MySQL database also sets redirect state to true (it is false by default)"],

        ["-useEffect in context.js file listens for a change in redirect state (redirect is a global variable)"],

        ["-if redirect changes, getCart() is called. getCart() is the function which is called in order to retrieve the current cart from the database to be used on the Cart page. I had already implemented this, but simply directing useEffect to watch for a change in another state variable allowed getCart() to re-trigger and thus update the the cart state immediately and indirectly (this did NOT work inside of the handleSubmit function)."],

        ["Here’s the code:"],

        ["In Context.js:"],

        ["successful-im1.png"],

        ["In ProductDetails.js (detailed product info page with ‘add to cart’ button which called handleSubmit on click)."],

        ["successful-im2.png"],

        ["I realize this is not a detailed explanation whatsoever and will be of little use to most developers seeking help. For the time being, this blog is to document my own issues - for my own reference and as proof of my problem solving abilities! There, I said it! "],

        ["But, it would of course be great if these barebones solutions do end up helping someone out."],

        ["That’s it for the moment."],


        ["Matt"]
      ],
      "tags": ["hardware", "politics"]
    },
    {
      "id": 6,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "paragraphs": [["And then, in an example axios request: "],
      [" const data = await axios.get(`${appUrl}/cart`);"]],
      "tags": []
    },
    {
      "id": 7,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "paragraphs": [["And then, in an example axios request: "],
      [" const data = await axios.get(`${appUrl}/cart`);"]],
      "tags": []
    },
    {
      "id": 8,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "paragraphs": [["And then, in an example axios request: "],
      [" const data = await axios.get(`${appUrl}/cart`);"]],
      "tags": []
    },
    {
      "id": 9,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "paragraphs": [["And then, in an example axios request: "],
      [" const data = await axios.get(`${appUrl}/cart`);"]],
      "tags": []
    }, 
    {
      "id": 10,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "paragraphs": [["And then, in an example axios request: "],
      [" const data = await axios.get(`${appUrl}/cart`);"]],
      "tags": []
    },
    {
      "id": 11,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "paragraphs": [["And then, in an example axios request: "],
      [" const data = await axios.get(`${appUrl}/cart`);"]],
      "tags": []
    },
    {
      "id": 12,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 13,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 14,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 15,
      "author": "MMMatt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 16,
      "author": "16",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },{
      "id": 17,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 18,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 19,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 20,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },{
      "id": 21,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 22,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 23,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 24,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 25,
      "author": "Matt Engerer25",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    }, {
      "id": 26,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Cras in purus eu magna vulputate luctus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.",
      "date": "1634439025000",
      "image": "",
      "readingTimeMinutes": 9,
      "tags": ["crypto", "health"]
    },
    {
      "id": 27,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Donec odio justo, sollicitudin ut, suscipit a, feugiat et, eros. Vestibulum ac est lacinia nisi venenatis tristique.",
      "date": "1630299425000",
      "image": "http://dummyimage.com/200x134.png/5fa2dd/ffffff",
      "readingTimeMinutes": 12,
      "tags": ["food", "health"]
    },
    {
      "id": 28,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 29,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Proin at turpis a pede posuere nonummy. Integer non velit.",
      "date": "1642895680000",
      "image": "http://dummyimage.com/200x134.png/5fa2dd/ffffff",
      "readingTimeMinutes": 13,
      "tags": ["finance", "food"]
    },
    {
      "id": 30,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Etiam vel augue.",
      "date": "1641217936000",
      "image": "",
      "readingTimeMinutes": 15,
      "tags": ["hardware", "politics"]
    },
    {
      "id": 31,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 32,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 33,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 34,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    }, 
    {
      "id": 35,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 36,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 37,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 38,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 39,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 40,
      "author": "MMMatt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 41,
      "author": "16",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },{
      "id": 42,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 43,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 44,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 45,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },{
      "id": 46,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 47,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 48,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 49,
      "author": "Matt Engerer",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    },
    {
      "id": 50,
      "author": "Matt Engerer50",
      "title": "Placeholder to display pagination",
      "preview": "Placeholder to display pagination",
      "date": "",
      "image": "",
      "readingTimeMinutes": "",
      "tags": []
    }]  }